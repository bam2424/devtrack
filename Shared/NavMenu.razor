@using Microsoft.AspNetCore.Identity
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject UserManager<IdentityUser> UserManager
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime

<nav class="nav-menu">
    <div class="nav-item">
        <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
            <i class="fas fa-tachometer-alt"></i>
            <span>Dashboard</span>
        </NavLink>
    </div>
    
    <div class="nav-item">
        <NavLink class="nav-link" href="projects">
            <i class="fas fa-folder"></i>
            <span>Projects</span>
        </NavLink>
    </div>
    
    <div class="nav-item">
        <NavLink class="nav-link" href="tasks">
            <i class="fas fa-tasks"></i>
            <span>Tasks</span>
        </NavLink>
    </div>
    
    <div class="nav-item">
        <NavLink class="nav-link" href="timer">
            <i class="fas fa-clock"></i>
            <span>Time Tracking</span>
        </NavLink>
    </div>
    
    <div class="nav-item">
        <NavLink class="nav-link" href="analytics">
            <i class="fas fa-chart-bar"></i>
            <span>Analytics</span>
        </NavLink>
    </div>
    
    <hr class="nav-divider">
    
    @if (isAdmin)
    {
        <div class="nav-item">
            <NavLink class="nav-link" href="google-logins">
                <i class="fas fa-google text-danger"></i>
                <span>Google Logins</span>
            </NavLink>
        </div>
    }
    
    <div class="nav-item">
        <NavLink class="nav-link" href="settings">
            <i class="fas fa-cog"></i>
            <span>Settings</span>
        </NavLink>
    </div>
    
    <AuthorizeView>
        <Authorized>
            <hr class="nav-divider">
            <div class="nav-item">
                <button class="nav-link nav-logout-btn" @onclick="Logout">
                    <i class="fas fa-sign-out-alt"></i>
                    <span>Logout</span>
                </button>
            </div>
        </Authorized>
    </AuthorizeView>
</nav>

@code {
    private bool collapseNavMenu = true;
    private bool isAdmin = false;
    private const string ADMIN_EMAIL = "wildicehole@gmail.com";

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    protected override async Task OnInitializedAsync()
    {
        await CheckAdminStatus();
    }

    private async Task CheckAdminStatus()
    {
        try
        {
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            if (authState.User.Identity?.IsAuthenticated == true)
            {
                var user = await UserManager.GetUserAsync(authState.User);
                isAdmin = user?.Email?.ToLower() == ADMIN_EMAIL.ToLower();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error checking admin status: {ex.Message}");
            isAdmin = false;
        }
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task Logout()
    {
        await JSRuntime.InvokeVoidAsync("eval", "document.getElementById('logoutForm').submit()");
    }
}
